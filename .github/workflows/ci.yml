name: MLC-LLM CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:latest
  FLY_APP: mlc-llm-app

jobs:

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}
          platforms: linux/amd64

  test:
    name: Run Tests in Docker Container
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run tests
        run: |
          docker run --rm \
          -e CI=true \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          ${{ env.IMAGE_NAME }} \
          ./scripts/test-image.sh

  release:
    name: Auto Release Every Commit
    runs-on: ubuntu-latest
    needs: test
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Generate Release Tag
        run: |
          TAG="auto-release-$(date +'%Y%m%d%H%M%S')"
          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag "$TAG"
          git push origin "$TAG"

      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/mlc_llm-${{ runner.os }}.whl
          asset_name: mlc_llm-${{ runner.os }}.whl
          asset_content_type: application/octet-stream

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Install Flyctl
        run: curl -L https://fly.io/install.sh | sh

      - name: Authenticate Flyctl
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl auth token

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy --image ${{ env.IMAGE_NAME }} --app ${{ env.FLY_APP }} --remote-only

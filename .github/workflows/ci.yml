name: MLC-LLM CI/CD

on:
  # Trigger workflow on push to main or version tags
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  # Trigger workflow on pull requests targeting main
  pull_request:
    branches: [ main ]
  # Manual trigger from Actions UI
  workflow_dispatch:

jobs:

  # Stage 1: Build and Push Docker Image to GHCR
  docker-build:
    name: Stage 1 - Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up QEMU for Multi-Platform Builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          platforms: linux/amd64

  # Stage 2: Run Automated Tests inside Multipurpose Docker Image
  test:
    name: Stage 2 - Run Tests
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      # Checkout the repository code to the runner
      - name: Checkout Source Code
        uses: actions/checkout@v4

      # Authenticate with GitHub Container Registry to pull the Docker image
      - name: Authenticate with GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Run tests inside the multipurpose Docker image
      - name: Run Tests Inside Docker Image
        run: |
          docker run --rm \
            -e CI=true \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ghcr.io/${{ github.repository }}:latest \
            ./scripts/test-image.sh

  # Stage 3: Build Python Wheels for Linux & Windows
  build-wheels:
    name: Stage 3 - Build Python Wheels
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      # Checkout the repository code
      - name: Checkout Source Code
        uses: actions/checkout@v4

      # Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      # Print Python version
      - name: Print Python version
        run: python --version

      # Install build tool and dependencies
      - name: Install build tool and dependencies
        run: |
          pip install build

      # Build the Python wheel
      - name: Build Python Wheel
        run: |
          python -m build python/

      # Upload the built wheel as an artifact
      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: python/dist/*.whl

  # Stage 4: Create GitHub Release with Wheels
  release:
    name: Stage 4 - GitHub Release
    runs-on: ubuntu-latest
    needs: build-wheels
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          files: ./artifacts/**/*.whl

name: MLC-LLM CI/CD

on:
  # Trigger workflow on push to main branch or version tags
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  # Trigger workflow on pull requests targeting main branch
  pull_request:
    branches: [ main ]
  # Allow manual triggering from the GitHub Actions UI
  workflow_dispatch:

jobs:

  # Stage 1: Build Docker Image
  docker-build:
    name: Stage 1 - Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up QEMU for Multi-Platform Builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          platforms: linux/amd64

  # Stage 2: Run Tests in Docker Container
  test:
    name: Stage 2 - Run Tests
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Run Tests Inside Docker Container
        run: |
          docker run --rm ghcr.io/${{ github.repository }}:latest ./scripts/test-image.sh

  # Stage 3: Build Python Wheels
  build-wheels:
    name: Stage 3 - Build Python Wheels
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      - name: Build Python Wheel Package
        run: |
          pip install build
          python -m build python/

      - name: Upload Built Wheel as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: python/dist/*.whl

  # Stage 4: Release Artifacts
  release:
    name: Stage 4 - Release Artifacts
    runs-on: ubuntu-latest
    needs: build-wheels
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download All Wheel Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release and Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          files: ./artifacts/**/*

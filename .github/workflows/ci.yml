name: MLC-LLM CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:latest

permissions:
  contents: write
  packages: write

jobs:

  build-image:
    name: 🏗 Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}
          platforms: linux/amd64

  test:
    name: ✅ Run Tests in Docker
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: actions/checkout@v4
      - run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ${{ env.IMAGE_NAME }} ./scripts/test-image.sh

  build-wheels:
    name: 🌀 Build Wheels
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.10
      - run: pip install build
      - run: python -m build python/
      - run: |
          mkdir -p dist/
          mv python/dist/*.whl dist/mlc_llm-${{ matrix.os }}.whl
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: dist/

  release:
    name: 🚀 Release Artifacts
    runs-on: ubuntu-latest
    needs: build-wheels
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Tag release
        run: |
          TAG="auto-release-$(date +'%Y%m%d%H%M%S')"
          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag "$TAG"
          git push origin "$TAG"
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.RELEASE_TAG }}
          files: |
            artifacts/wheel-ubuntu-latest/*.whl
            artifacts/wheel-windows-latest/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-demo:
    name: 🧪 Deploy & Test Model Server
    runs-on: ubuntu-latest
    needs: release
    steps:
      - run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: |
          docker run -d --name mlc-server -p 8000:8000 \
            ${{ env.IMAGE_NAME }} \
            mlc_llm serve --host 0.0.0.0
      - run: |
          for i in {1..10}; do
            curl -fsS http://localhost:8000 && break || sleep 5
          done
      - run: |
          curl -X POST http://localhost:8000/v1/chat/completions \
            -H "Content-Type: application/json" \
            -d '{
              "model": "Llama-2-7b-chat-glm-4b-q0f16_0",
              "messages": [{"role": "user", "content": "Hello!"}]
            }' | jq .
      - run: docker logs mlc-server || true
      - run: docker rm -f mlc-server || true
